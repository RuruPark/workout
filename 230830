#5622
#전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다. 
#숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다.
#숫자 1을 걸려면 총 2초가 필요하다. 1보다 큰 수를 거는데 걸리는 시간은 이보다 더 걸리며, 한 칸 옆에 있는 숫자를 걸기 위해선 1초씩 더 걸린다.
#상근이의 할머니는 전화 번호를 각 숫자에 해당하는 문자로 외운다. 즉, 어떤 단어를 걸 때, 각 알파벳에 해당하는 숫자를 걸면 된다. 
#예를 들어, UNUCIC는 868242와 같다.
#할머니가 외운 단어가 주어졌을 때, 이 전화를 걸기 위해서 필요한 최소 시간을 구하는 프로그램을 작성하시오.
#첫째 줄에 알파벳 대문자로 이루어진 단어가 주어진다. 단어의 길이는 2보다 크거나 같고, 15보다 작거나 같다.
#첫째 줄에 다이얼을 걸기 위해서 필요한 최소 시간을 출력한다.

#A 입력받음
#다이얼에 해당하는 알파벳끼리 리스트만들기
#반복문으로 입력받은 A를 A길이 i만큼 반복
    #반복문으로 alp의 길이 j만큼 반복
        #조건문으로 alp[j] 에 A[i]가 있는지
            #T+=alp.index(j)+3
#T 출력

A= input()
T = 0
alp = ['ABC','DEF','GHI','JKL','MNO','PQRS','TUV','WXYZ']
for i in range(len(A)):
    for j in range(len(alp)):
        if A[i] in alp[j]:
            T+=alp.index(alp[j])+3
print(T)

#11718
#입력 받은 대로 출력하는 프로그램을 작성하시오.
#입력이 주어진다. 입력은 최대 100줄로 이루어져 있고, 알파벳 소문자, 대문자, 공백, 숫자로만 이루어져 있다. 
#각 줄은 100글자를 넘지 않으며, 빈 줄은 주어지지 않는다. 또, 각 줄은 공백으로 시작하지 않고, 공백으로 끝나지 않는다.

while True:
  try:  
    word = input()
    print(word)
  except EOFError: #얼마나 입력받는지 정해져있지 않아 에러가 발생하므로 예외처리.
    break