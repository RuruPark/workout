# round() - 반올림 함수
# 사사육입 방식으로 소수점을 반올림. 정수가 짝수일 때 소수점이 5라면 내리고, 정수가 홀수일 때 소수점이 5라면 올리는 방식.
# from 모듈 import 가져오고 싶은 변수 또는 함수 - import 뒤의 변수, 함수는 모듈이름없이 사용할 수 있음. ex) math.sin(1) > sin(1) / 전부 가져오고 싶은 경우 import * (전부라는 뜻)
# import 모듈 as 식별자 - 모듈을 입력한 식별자로 사용할 수 있음
#("{}{}{}{}{}{}{}").format(*문자열 or *list) - 문자열, 리스트의 요소 하나하나가 매개변수로 지정.
import time
time.sleep(5) #5초동안 정지

#27866
#단어 s와 정수 i가 주어졌을 때, s의 i번째 글자를 출력하는 프로그램을 작성하시오.
#첫째 줄에 영어 소문자와 대문자로만 이루어진 단어 S가 주어진다. 단어의 길이는 최대 1000이다.
#둘째 줄에 정수 i가 주어진다. 
#S의 i번째 글자를 출력한다.

S = list(input())
i = int(input())
print(S[i-1])

#2743
#알파벳으로만 이루어진 단어를 입력받아, 그 길이를 출력하는 프로그램을 작성하시오.
#첫째 줄에 영어 소문자와 대문자로만 이루어진 단어가 주어진다. 단어의 길이는 최대 100이다.
#첫째 줄에 입력으로 주어진 단어의 길이를 출력한다.

al = list(input())
print(len(al))

al = input()
print(len(al)) #문자열 길이를 출력

print(len(input())) #변수지정없이 출력

#9086
#문자열을 입력으로 주면 문자열의 첫 글자와 마지막 글자를 출력하는 프로그램을 작성하시오.
#입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 10)가 주어진다. 각 테스트 케이스는 한 줄에 하나의 문자열이 주어진다. 
#문자열은 알파벳 A~Z 대문자로 이루어지며 알파벳 사이에 공백은 없으며 문자열의 길이는 1000보다 작다.
#각 테스트 케이스에 대해서 주어진 문자열의 첫 글자와 마지막 글자를 연속하여 출력한다.

str = []
T = int(input())
for i in range(T):
    str.append(list(input()))
for i in range(T):
    print(str[i][0],str[i][-1], sep='') #sep='' print문에서 ,로 구분되는 요소들을 붙여서 출력. 기본값은 sep = ' ' (공백) / end의 경우 print문끼리의 개행을 없앨 수 있다.

#11654
#알파벳 소문자, 대문자, 숫자 0-9중 하나가 주어졌을 때, 주어진 글자의 아스키 코드값을 출력하는 프로그램을 작성하시오.
#알파벳 소문자, 대문자, 숫자 0-9 중 하나가 첫째 줄에 주어진다.
#입력으로 주어진 글자의 아스키 코드 값을 출력한다.

#11654
#알파벳 소문자, 대문자, 숫자 0-9중 하나가 주어졌을 때, 주어진 글자의 아스키 코드값을 출력하는 프로그램을 작성하시오.
#알파벳 소문자, 대문자, 숫자 0-9 중 하나가 첫째 줄에 주어진다.
#입력으로 주어진 글자의 아스키 코드 값을 출력한다.

#ord():문자를 아스키 코드로 반환 / chr(숫자):아스키 코드를 문자열로 변환.
#왜인지 작동되는 코드
L = input()
if type(L)==str:
    print(ord(L))
else:
    print(chr(L)) #chr(0)이 48로 나와야하는데 정답처리됐다.

#한줄로 
print(ord(input()))

#11720
#N개의 숫자가 공백 없이 쓰여있다. 이 숫자를 모두 합해서 출력하는 프로그램을 작성하시오.
#첫째 줄에 숫자의 개수 N (1 ≤ N ≤ 100)이 주어진다. 둘째 줄에 숫자 N개가 공백없이 주어진다.
#입력으로 주어진 숫자 N개의 합을 출력한다.

N = int(input())
I =list(int(input())) #TypeError
S = 0
for i in range(N):
    S+=I[i]
print(S)




