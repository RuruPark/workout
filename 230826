#10813
#도현이는 바구니를 총 N개 가지고 있고, 각각의 바구니에는 1번부터 N번까지 번호가 매겨져 있다. 바구니에는 공이 1개씩 들어있고, 
#처음에는 바구니에 적혀있는 번호와 같은 번호가 적힌 공이 들어있다.
#도현이는 앞으로 M번 공을 바꾸려고 한다. 도현이는 공을 바꿀 바구니 2개를 선택하고, 두 바구니에 들어있는 공을 서로 교환한다.
#공을 어떻게 바꿀지가 주어졌을 때, M번 공을 바꾼 이후에 각 바구니에 어떤 공이 들어있는지 구하는 프로그램을 작성하시오.
#첫째 줄에 N (1 ≤ N ≤ 100)과 M (1 ≤ M ≤ 100)이 주어진다.
#둘째 줄부터 M개의 줄에 걸쳐서 공을 교환할 방법이 주어진다. 각 방법은 두 정수 i j로 이루어져 있으며, i번 바구니와 j번 바구니에 들어있는 공을 교환한다는 뜻이다. (1 ≤ i ≤ j ≤ N)
#도현이는 입력으로 주어진 순서대로 공을 교환한다.
#1번 바구니부터 N번 바구니에 들어있는 공의 번호를 공백으로 구분해 출력한다.

N, M = map(int,input().split())
Basket = []
for number in range(N):
    Basket.append(number+1)
for _ in range(M):
    i, j= map(int,input().split())
    Basket[i-1], Basket[j-1] = Basket[j-1], Basket[i-1] #i와 j 바구니가 공을 교환하는 반복문을 M번 반복

print(*Basket) #리스트 요소만 출력

#5597
#X대학 M교수님은 프로그래밍 수업을 맡고 있다. 교실엔 학생이 30명이 있는데, 학생 명부엔 각 학생별로 1번부터 30번까지 출석번호가 붙어 있다.
#교수님이 내준 특별과제를 28명이 제출했는데, 그 중에서 제출 안 한 학생 2명의 출석번호를 구하는 프로그램을 작성하시오.
#입력은 총 28줄로 각 제출자(학생)의 출석번호 n(1 ≤ n ≤ 30)가 한 줄에 하나씩 주어진다. 출석번호에 중복은 없다.
#출력은 2줄이다. 1번째 줄엔 제출하지 않은 학생의 출석번호 중 가장 작은 것을 출력하고, 2번째 줄에선 그 다음 출석번호를 출력한다.

#1번부터 30번까지의 학생 중 입력되지 않은 번호를 오름차순으로 출력.

GoodStudent = []
BadStudent = []
for _ in range(28):  #0부터 27 총 28명의 학생번호를 입력
    student = int(input())
    GoodStudent.append(student)  #번호를 good리스트에 추가
for i in range(30): #0부터 29까지 총 30번 반복해서 과제를 안 낸 학생의 번호를 bad 리스트에 추가
    if i+1 in GoodStudent: #처음 코드.. : if i+1 in GoodStudent == False: 
        pass
    else:
        BadStudent.append(i+1)
BadStudent.sort() #오름차순 정렬
for j in BadStudent: #print(BadStudent[0])
    print(j)         #print(BadStudent[-1])

#3052
#두 자연수 A와 B가 있을 때, A%B는 A를 B로 나눈 나머지 이다. 예를 들어, 7, 14, 27, 38을 3으로 나눈 나머지는 1, 2, 0, 2이다. 
#수 10개를 입력받은 뒤, 이를 42로 나눈 나머지를 구한다. 그 다음 서로 다른 값이 몇 개 있는지 출력하는 프로그램을 작성하시오.
#첫째 줄부터 열번째 줄 까지 숫자가 한 줄에 하나씩 주어진다. 이 숫자는 1,000보다 작거나 같고, 음이 아닌 정수이다.
#첫째 줄에, 42로 나누었을 때, 서로 다른 나머지가 몇 개 있는지 출력한다.

N = []
for _ in range(10):
    number = int(input())
    N.append(number%42)
print(len(set(N))) #set은 중복을 가지지 않는 자료형이므로 중복 제거 후 길이 계산.

#10811
#도현이는 바구니를 총 N개 가지고 있고, 각각의 바구니에는 1번부터 N번까지 번호가 순서대로 적혀져 있다. 
#바구니는 일렬로 놓여져 있고, 가장 왼쪽 바구니를 1번째 바구니, 그 다음 바구니를 2번째 바구니, ..., 가장 오른쪽 바구니를 N번째 바구니라고 부른다. 
#도현이는 앞으로 M번 바구니의 순서를 역순으로 만들려고 한다. 도현이는 한 번 순서를 역순으로 바꿀 때, 순서를 역순으로 만들 범위를 정하고, 그 범위에 들어있는 바구니의 순서를 역순으로 만든다.
#바구니의 순서를 어떻게 바꿀지 주어졌을 때, M번 바구니의 순서를 역순으로 만든 다음, 바구니에 적혀있는 번호를 가장 왼쪽 바구니부터 출력하는 프로그램을 작성하시오.
#첫째 줄에 N (1 ≤ N ≤ 100)과 M (1 ≤ M ≤ 100)이 주어진다.
#둘째 줄부터 M개의 줄에는 바구니의 순서를 역순으로 만드는 방법이 주어진다. 방법은 i j로 나타내고, 왼쪽으로부터 i번째 바구니부터 j번째 바구니의 순서를 역순으로 만든다는 뜻이다. (1 ≤ i ≤ j ≤ N)
#도현이는 입력으로 주어진 순서대로 바구니의 순서를 바꾼다.
#모든 순서를 바꾼 다음에, 가장 왼쪽에 있는 바구니부터 바구니에 적혀있는 순서를 공백으로 구분해 출력한다.

#AttributeError
Basket = []
N, M = map(int,input().split())
for n in range(N):
    Basket.append(n+1)
for _ in range(M):
    i, j = map(int,input().split())
    Basket[i:j+1] = Basket[i:j+1].reverse() #일정부분만 역순으로 만드는 방법 찾기.
print(*Basket)

#1546
#세준이는 기말고사를 망쳤다. 세준이는 점수를 조작해서 집에 가져가기로 했다. 일단 세준이는 자기 점수 중에 최댓값을 골랐다. 이 값을 M이라고 한다. 
#그리고 나서 모든 점수를 점수/M*100으로 고쳤다.
#예를 들어, 세준이의 최고점이 70이고, 수학점수가 50이었으면 수학점수는 50/70*100이 되어 71.43점이 된다.
#세준이의 성적을 위의 방법대로 새로 계산했을 때, 새로운 평균을 구하는 프로그램을 작성하시오.
#첫째 줄에 시험 본 과목의 개수 N이 주어진다. 이 값은 1000보다 작거나 같다. 둘째 줄에 세준이의 현재 성적이 주어진다. 
#이 값은 100보다 작거나 같은 음이 아닌 정수이고, 적어도 하나의 값은 0보다 크다.
#첫째 줄에 새로운 평균을 출력한다. 실제 정답과 출력값의 절대오차 또는 상대오차가 10-2 이하이면 정답이다.

score = []
N = int(input())
map(int,input().split()) #입력값 N만큼 받은 map을 리스트로 만들어야 함.  
    pass

M = max(score)
for i in range(N):
    score[i] = score[i]/M*100
print(sum(score))